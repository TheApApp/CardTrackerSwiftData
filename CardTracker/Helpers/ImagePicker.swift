//
//  ImagePicker.swift
//  CardTracker
//
//  Created by Michael Rowe on 12/11/23.
//

import SwiftUI
import UIKit

/// This Swift code defines a SwiftUI struct named ImagePicker that conforms to the UIViewControllerRepresentable protocol. 
/// The purpose of this struct is to encapsulate the functionality of an image picker (UIImagePickerController) and make it usable within a SwiftUI view.
/// This was generated by ChatGPT Explain
struct ImagePicker: UIViewControllerRepresentable {

    /// Specifies the source type for the image picker, with a default value of .photoLibrary.
    var sourceType: UIImagePickerController.SourceType = .photoLibrary
    /// A binding to an optional SwiftUI Image that will represent the selected image.
    @Binding var image: Image?
    /// A binding to a boolean indicating whether the image picker is currently presented.
    @Binding var isPresented: Bool

    /// This function creates and returns an instance of ImagePickerViewCoordinator, passing the $image and $isPresented bindings to it. 
    /// This coordinator will handle the interaction with the UIImagePickerController.
    func makeCoordinator() -> ImagePickerViewCoordinator {
        return ImagePickerViewCoordinator(image: $image, isPresented: $isPresented)
    }

    /// This function creates and configures a UIImagePickerController instance.
    /// It sets the sourceType based on the sourceType property of the ImagePicker struct.
    /// It assigns the coordinator created in makeCoordinator to be the delegate of the pickerController.
    func makeUIViewController(context: Context) -> UIImagePickerController {
        let pickerController = UIImagePickerController()
        pickerController.sourceType = sourceType
        pickerController.delegate = context.coordinator
        return pickerController
    }

    /// This function is called when the SwiftUI system decides that the view needs to be updated.
    /// In this case, there is nothing to update, so the function is left empty.
    func updateUIViewController(_ uiViewController: UIImagePickerController, context: Context) {
        // Nothing to update here
    }
}

/// This Swift class, ImagePickerViewCoordinator, is designed to act as a coordinator for handling image picking functionality using UIImagePickerController.
/// The class inherits from NSObject and conforms to two protocols: UINavigationControllerDelegate and UIImagePickerControllerDelegate. 
/// These protocols are part of the UIKit framework and provide methods for managing navigation and handling events related to image picking.
/// Overall, this class encapsulates the logic for handling image picking events and updating the necessary state variables using the @Binding mechanism. 
/// It can be used as a coordinator in SwiftUI to integrate image picking functionality into a SwiftUI view.
class ImagePickerViewCoordinator: NSObject, UINavigationControllerDelegate, UIImagePickerControllerDelegate {

    /// The image property represents the selected image
    @Binding var image: Image?
    /// isPresented represents whether the image picker is currently presented.
    @Binding var isPresented: Bool

    /// The initializer takes two Binding parameters: one for the selected image (image) and another for the presentation state (isPresented). 
    /// It sets the corresponding internal properties with the provided bindings.
    init(image: Binding<Image?>, isPresented: Binding<Bool>) {
        self._image = image
        self._isPresented = isPresented
    }

    /// This method is called when the user selects an image in the image picker. It extracts the original image from the info dictionary, converts it to a SwiftUI Image, and updates the image property. 
    /// Finally, it sets isPresented to false, indicating that the image picker should be dismissed.
    func imagePickerController(
        _ picker: UIImagePickerController,
        didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey: Any]) {
        if let image = info[UIImagePickerController.InfoKey.originalImage] as? UIImage {
            self.image = Image(uiImage: image)
        }
        self.isPresented = false
    }

    /// This method is called when the user cancels the image picking process. It simply sets isPresented to false, indicating that the image picker should be dismissed.
    func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {
        self.isPresented = false
    }
}
